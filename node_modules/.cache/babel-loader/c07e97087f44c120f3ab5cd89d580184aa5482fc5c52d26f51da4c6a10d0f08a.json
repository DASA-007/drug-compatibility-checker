{"ast":null,"code":"import React,{useState}from'react';import'./styles/App.css';import Header from'./components/Header';import Disclaimer from'./components/Disclaimer';import DrugSelector from'./components/DrugSelector';import DiluentSelector from'./components/DiluentSelector';import CompatibilityResults from'./components/CompatibilityResults';import Footer from'./components/Footer';import{useCompatibilityChecker}from'./data/useCompatibilityChecker';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[selectedDrugs,setSelectedDrugs]=useState([]);const[selectedDiluent,setSelectedDiluent]=useState('NS');// Default to Normal Saline\nconst[compatibilityResult,setCompatibilityResult]=useState(null);const{loading,error,checkCompatibility}=useCompatibilityChecker();const handleCheckCompatibility=()=>{if(selectedDrugs.length===0)return;const result=checkCompatibility(selectedDrugs,selectedDiluent);setCompatibilityResult(result);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Disclaimer,{}),/*#__PURE__*/_jsx(\"main\",{className:\"app-content\",children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading drug compatibility data...\"}):error?/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DrugSelector,{selectedDrugs:selectedDrugs,setSelectedDrugs:setSelectedDrugs}),/*#__PURE__*/_jsx(DiluentSelector,{selectedDiluent:selectedDiluent,setSelectedDiluent:setSelectedDiluent}),/*#__PURE__*/_jsx(\"button\",{className:\"check-button\",onClick:handleCheckCompatibility,disabled:selectedDrugs.length===0,children:\"Check Compatibility\"}),compatibilityResult&&/*#__PURE__*/_jsx(CompatibilityResults,{result:compatibilityResult})]})}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","Header","Disclaimer","DrugSelector","DiluentSelector","CompatibilityResults","Footer","useCompatibilityChecker","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","selectedDrugs","setSelectedDrugs","selectedDiluent","setSelectedDiluent","compatibilityResult","setCompatibilityResult","loading","error","checkCompatibility","handleCheckCompatibility","length","result","className","children","onClick","disabled"],"sources":["/home/ubuntu/drug-compatibility-checker/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles/App.css';\nimport Header from './components/Header';\nimport Disclaimer from './components/Disclaimer';\nimport DrugSelector from './components/DrugSelector';\nimport DiluentSelector from './components/DiluentSelector';\nimport CompatibilityResults from './components/CompatibilityResults';\nimport Footer from './components/Footer';\nimport { useCompatibilityChecker } from './data/useCompatibilityChecker';\n\nfunction App() {\n  const [selectedDrugs, setSelectedDrugs] = useState([]);\n  const [selectedDiluent, setSelectedDiluent] = useState('NS'); // Default to Normal Saline\n  const [compatibilityResult, setCompatibilityResult] = useState(null);\n  const { loading, error, checkCompatibility } = useCompatibilityChecker();\n\n  const handleCheckCompatibility = () => {\n    if (selectedDrugs.length === 0) return;\n    \n    const result = checkCompatibility(selectedDrugs, selectedDiluent);\n    setCompatibilityResult(result);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Disclaimer />\n      <main className=\"app-content\">\n        {loading ? (\n          <p>Loading drug compatibility data...</p>\n        ) : error ? (\n          <p className=\"error-message\">{error}</p>\n        ) : (\n          <>\n            <DrugSelector \n              selectedDrugs={selectedDrugs} \n              setSelectedDrugs={setSelectedDrugs} \n            />\n            <DiluentSelector \n              selectedDiluent={selectedDiluent} \n              setSelectedDiluent={setSelectedDiluent} \n            />\n            <button \n              className=\"check-button\" \n              onClick={handleCheckCompatibility}\n              disabled={selectedDrugs.length === 0}\n            >\n              Check Compatibility\n            </button>\n            {compatibilityResult && (\n              <CompatibilityResults result={compatibilityResult} />\n            )}\n          </>\n        )}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,kBAAkB,CACzB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,oBAAoB,KAAM,mCAAmC,CACpE,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,uBAAuB,KAAQ,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACiB,eAAe,CAAEC,kBAAkB,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAC9D,KAAM,CAACmB,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CACpE,KAAM,CAAEqB,OAAO,CAAEC,KAAK,CAAEC,kBAAmB,CAAC,CAAGhB,uBAAuB,CAAC,CAAC,CAExE,KAAM,CAAAiB,wBAAwB,CAAGA,CAAA,GAAM,CACrC,GAAIT,aAAa,CAACU,MAAM,GAAK,CAAC,CAAE,OAEhC,KAAM,CAAAC,MAAM,CAAGH,kBAAkB,CAACR,aAAa,CAAEE,eAAe,CAAC,CACjEG,sBAAsB,CAACM,MAAM,CAAC,CAChC,CAAC,CAED,mBACEb,KAAA,QAAKc,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBnB,IAAA,CAACR,MAAM,GAAE,CAAC,cACVQ,IAAA,CAACP,UAAU,GAAE,CAAC,cACdO,IAAA,SAAMkB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAC1BP,OAAO,cACNZ,IAAA,MAAAmB,QAAA,CAAG,oCAAkC,CAAG,CAAC,CACvCN,KAAK,cACPb,IAAA,MAAGkB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEN,KAAK,CAAI,CAAC,cAExCT,KAAA,CAAAF,SAAA,EAAAiB,QAAA,eACEnB,IAAA,CAACN,YAAY,EACXY,aAAa,CAAEA,aAAc,CAC7BC,gBAAgB,CAAEA,gBAAiB,CACpC,CAAC,cACFP,IAAA,CAACL,eAAe,EACda,eAAe,CAAEA,eAAgB,CACjCC,kBAAkB,CAAEA,kBAAmB,CACxC,CAAC,cACFT,IAAA,WACEkB,SAAS,CAAC,cAAc,CACxBE,OAAO,CAAEL,wBAAyB,CAClCM,QAAQ,CAAEf,aAAa,CAACU,MAAM,GAAK,CAAE,CAAAG,QAAA,CACtC,qBAED,CAAQ,CAAC,CACRT,mBAAmB,eAClBV,IAAA,CAACJ,oBAAoB,EAACqB,MAAM,CAAEP,mBAAoB,CAAE,CACrD,EACD,CACH,CACG,CAAC,cACPV,IAAA,CAACH,MAAM,GAAE,CAAC,EACP,CAAC,CAEV,CAEA,cAAe,CAAAQ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}