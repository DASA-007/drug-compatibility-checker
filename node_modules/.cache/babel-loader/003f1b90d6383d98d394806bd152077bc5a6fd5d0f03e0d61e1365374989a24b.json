{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../styles/DrugSelector.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DrugSelector(_ref){let{selectedDrugs,setSelectedDrugs}=_ref;const[availableDrugs,setAvailableDrugs]=useState(['morphine','hydromorphone','fentanyl','methadone','midazolam','clonazepam','haloperidol','cyclizine','hyoscine butylbromide','glycopyrrolate']);const[inputValue,setInputValue]=useState('');const[suggestions,setSuggestions]=useState([]);useEffect(()=>{if(inputValue.trim()===''){setSuggestions([]);return;}const filteredSuggestions=availableDrugs.filter(drug=>!selectedDrugs.includes(drug)&&drug.toLowerCase().includes(inputValue.toLowerCase()));setSuggestions(filteredSuggestions);},[inputValue,availableDrugs,selectedDrugs]);const handleInputChange=e=>{setInputValue(e.target.value);};const addDrug=drug=>{if(selectedDrugs.length<3&&!selectedDrugs.includes(drug)){setSelectedDrugs([...selectedDrugs,drug]);setInputValue('');setSuggestions([]);}};const removeDrug=drugToRemove=>{setSelectedDrugs(selectedDrugs.filter(drug=>drug!==drugToRemove));};return/*#__PURE__*/_jsxs(\"div\",{className:\"drug-selector\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Select Drugs (1-3)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"selected-drugs\",children:selectedDrugs.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-drugs-message\",children:\"No drugs selected\"}):selectedDrugs.map((drug,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"selected-drug\",children:[/*#__PURE__*/_jsx(\"span\",{children:drug}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-drug-btn\",onClick:()=>removeDrug(drug),\"aria-label\":`Remove ${drug}`,children:\"\\xD7\"})]},index))}),selectedDrugs.length<3&&/*#__PURE__*/_jsxs(\"div\",{className:\"drug-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:handleInputChange,placeholder:\"Type to search drugs...\",className:\"drug-input\",\"aria-label\":\"Search for drugs\"}),suggestions.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions-list\",children:suggestions.map((drug,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>addDrug(drug),className:\"suggestion-item\",children:drug},index))})]})]});}export default DrugSelector;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","DrugSelector","_ref","selectedDrugs","setSelectedDrugs","availableDrugs","setAvailableDrugs","inputValue","setInputValue","suggestions","setSuggestions","trim","filteredSuggestions","filter","drug","includes","toLowerCase","handleInputChange","e","target","value","addDrug","length","removeDrug","drugToRemove","className","children","map","index","onClick","type","onChange","placeholder"],"sources":["/home/ubuntu/drug-compatibility-checker/src/components/DrugSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/DrugSelector.css';\n\nfunction DrugSelector({ selectedDrugs, setSelectedDrugs }) {\n  const [availableDrugs, setAvailableDrugs] = useState([\n    'morphine', 'hydromorphone', 'fentanyl', 'methadone', \n    'midazolam', 'clonazepam', 'haloperidol', 'cyclizine', \n    'hyoscine butylbromide', 'glycopyrrolate'\n  ]);\n  \n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    if (inputValue.trim() === '') {\n      setSuggestions([]);\n      return;\n    }\n    \n    const filteredSuggestions = availableDrugs\n      .filter(drug => \n        !selectedDrugs.includes(drug) && \n        drug.toLowerCase().includes(inputValue.toLowerCase())\n      );\n    \n    setSuggestions(filteredSuggestions);\n  }, [inputValue, availableDrugs, selectedDrugs]);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const addDrug = (drug) => {\n    if (selectedDrugs.length < 3 && !selectedDrugs.includes(drug)) {\n      setSelectedDrugs([...selectedDrugs, drug]);\n      setInputValue('');\n      setSuggestions([]);\n    }\n  };\n\n  const removeDrug = (drugToRemove) => {\n    setSelectedDrugs(selectedDrugs.filter(drug => drug !== drugToRemove));\n  };\n\n  return (\n    <div className=\"drug-selector\">\n      <h2>Select Drugs (1-3)</h2>\n      \n      <div className=\"selected-drugs\">\n        {selectedDrugs.length === 0 ? (\n          <p className=\"no-drugs-message\">No drugs selected</p>\n        ) : (\n          selectedDrugs.map((drug, index) => (\n            <div key={index} className=\"selected-drug\">\n              <span>{drug}</span>\n              <button \n                className=\"remove-drug-btn\" \n                onClick={() => removeDrug(drug)}\n                aria-label={`Remove ${drug}`}\n              >\n                Ã—\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n      \n      {selectedDrugs.length < 3 && (\n        <div className=\"drug-input-container\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            placeholder=\"Type to search drugs...\"\n            className=\"drug-input\"\n            aria-label=\"Search for drugs\"\n          />\n          \n          {suggestions.length > 0 && (\n            <ul className=\"suggestions-list\">\n              {suggestions.map((drug, index) => (\n                <li \n                  key={index} \n                  onClick={() => addDrug(drug)}\n                  className=\"suggestion-item\"\n                >\n                  {drug}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DrugSelector;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAsC,IAArC,CAAEC,aAAa,CAAEC,gBAAiB,CAAC,CAAAF,IAAA,CACvD,KAAM,CAACG,cAAc,CAAEC,iBAAiB,CAAC,CAAGX,QAAQ,CAAC,CACnD,UAAU,CAAE,eAAe,CAAE,UAAU,CAAE,WAAW,CACpD,WAAW,CAAE,YAAY,CAAE,aAAa,CAAE,WAAW,CACrD,uBAAuB,CAAE,gBAAgB,CAC1C,CAAC,CAEF,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAElDC,SAAS,CAAC,IAAM,CACd,GAAIW,UAAU,CAACI,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC5BD,cAAc,CAAC,EAAE,CAAC,CAClB,OACF,CAEA,KAAM,CAAAE,mBAAmB,CAAGP,cAAc,CACvCQ,MAAM,CAACC,IAAI,EACV,CAACX,aAAa,CAACY,QAAQ,CAACD,IAAI,CAAC,EAC7BA,IAAI,CAACE,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACR,UAAU,CAACS,WAAW,CAAC,CAAC,CACtD,CAAC,CAEHN,cAAc,CAACE,mBAAmB,CAAC,CACrC,CAAC,CAAE,CAACL,UAAU,CAAEF,cAAc,CAAEF,aAAa,CAAC,CAAC,CAE/C,KAAM,CAAAc,iBAAiB,CAAIC,CAAC,EAAK,CAC/BV,aAAa,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,OAAO,CAAIP,IAAI,EAAK,CACxB,GAAIX,aAAa,CAACmB,MAAM,CAAG,CAAC,EAAI,CAACnB,aAAa,CAACY,QAAQ,CAACD,IAAI,CAAC,CAAE,CAC7DV,gBAAgB,CAAC,CAAC,GAAGD,aAAa,CAAEW,IAAI,CAAC,CAAC,CAC1CN,aAAa,CAAC,EAAE,CAAC,CACjBE,cAAc,CAAC,EAAE,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAa,UAAU,CAAIC,YAAY,EAAK,CACnCpB,gBAAgB,CAACD,aAAa,CAACU,MAAM,CAACC,IAAI,EAAIA,IAAI,GAAKU,YAAY,CAAC,CAAC,CACvE,CAAC,CAED,mBACExB,KAAA,QAAKyB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B5B,IAAA,OAAA4B,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAE3B5B,IAAA,QAAK2B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BvB,aAAa,CAACmB,MAAM,GAAK,CAAC,cACzBxB,IAAA,MAAG2B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,mBAAiB,CAAG,CAAC,CAErDvB,aAAa,CAACwB,GAAG,CAAC,CAACb,IAAI,CAAEc,KAAK,gBAC5B5B,KAAA,QAAiByB,SAAS,CAAC,eAAe,CAAAC,QAAA,eACxC5B,IAAA,SAAA4B,QAAA,CAAOZ,IAAI,CAAO,CAAC,cACnBhB,IAAA,WACE2B,SAAS,CAAC,iBAAiB,CAC3BI,OAAO,CAAEA,CAAA,GAAMN,UAAU,CAACT,IAAI,CAAE,CAChC,aAAY,UAAUA,IAAI,EAAG,CAAAY,QAAA,CAC9B,MAED,CAAQ,CAAC,GARDE,KASL,CACN,CACF,CACE,CAAC,CAELzB,aAAa,CAACmB,MAAM,CAAG,CAAC,eACvBtB,KAAA,QAAKyB,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnC5B,IAAA,UACEgC,IAAI,CAAC,MAAM,CACXV,KAAK,CAAEb,UAAW,CAClBwB,QAAQ,CAAEd,iBAAkB,CAC5Be,WAAW,CAAC,yBAAyB,CACrCP,SAAS,CAAC,YAAY,CACtB,aAAW,kBAAkB,CAC9B,CAAC,CAEDhB,WAAW,CAACa,MAAM,CAAG,CAAC,eACrBxB,IAAA,OAAI2B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC7BjB,WAAW,CAACkB,GAAG,CAAC,CAACb,IAAI,CAAEc,KAAK,gBAC3B9B,IAAA,OAEE+B,OAAO,CAAEA,CAAA,GAAMR,OAAO,CAACP,IAAI,CAAE,CAC7BW,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAE1BZ,IAAI,EAJAc,KAKH,CACL,CAAC,CACA,CACL,EACE,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAA3B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}